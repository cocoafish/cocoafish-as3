<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   width="100%" minWidth="955" minHeight="600" 
			   applicationComplete="updateForm()"
			   xmlns:containers="com.dougmccune.containers.*">
	<fx:Script source="scripts/collections.as"/>
	<fx:Script source="scripts/common.as"/>
	<fx:Script source="scripts/keyvalues.as"/>
	<fx:Script>
		<![CDATA[
			import com.adobe.serialization.json.JSON;
			import com.cocoafish.api.Cocoafish;
			
			import mx.containers.TitleWindow;
			import mx.controls.Alert;
			import mx.controls.ProgressBar;
			import mx.managers.PopUpManager;
			
			private var photo:FileReference;
			private var isPhotoLoaded:Boolean = false;
			var waitingpopup:TitleWindow;
			
			protected function button1_clickHandler(event:MouseEvent):void
			{
				var sdk:Cocoafish = null;
				if(appKey.selected) {
					sdk = new Cocoafish(appKeyTextField.text);
				}
				if(oauth.selected) {
					sdk = new Cocoafish(oauthKeyTextField.text, oauthSecretTextField.text);
				}
				var data:Object = new Object();
				data.email = emailTextField.text;
				data.first_name = firstNameTextField.text;
				data.last_name = lastNameTextField.text;
				data.password = passwdTextField.text;
				data.password_confirmation = passwdConfirmTextField.text;
				if(photoRadio.selected) {
					data.photo = photo;
				}
				
				sdk.sendRequest("users/create.json", URLRequestMethod.POST, data, false, function(data:Object):void {
					hideLoading();
					if(data) {
						if(data.hasOwnProperty("meta")) {
							var meta:Object = data.meta;
							if(meta.status == "ok" && meta.code == 200 && meta.method_name == "createUser") {
								var message:String = "";
								var user:Object = data.response.users[0];
								message += "Create user successful!\n";
								message += "id:" + user.id + "\n";
								message += "first name:" + user.first_name + "\n";
								message += "last name:" + user.last_name + "\n";
								message += "email:" + user.email + "\n";
								Alert.show(message);
							} else {
								var message:String = "Create user failed.\n\n";
								message += "Code:" + meta.code + "\n";
								message += "Details:" + meta.message + "\n";
								Alert.show(message);
							}
						}
					}
				});
				showLoading();
			}
			
			protected function selectPhoto(event:MouseEvent):void {
				photo= new FileReference();
				photo.addEventListener(Event.SELECT, photoSelected);
				photo.browse();
			}
			
			protected function photoSelected(event:Event):void {
				photoTextField.text = photo.name;
				photo.removeEventListener(Event.SELECT, photoSelected);
				photo.addEventListener(Event.COMPLETE, photoLoaded);
				photo.load();
			}
			
			protected function photoLoaded(event:Event):void {
				photo.removeEventListener(Event.COMPLETE, photoLoaded);
				isPhotoLoaded = true;
				updateForm();
			}
			
			protected function photoRadio_clickHandler(event:MouseEvent):void
			{
				updateForm();
			}
			
			protected function updateForm():void {
				sendBtn.enabled = false;
				if(photoRadio.selected) {
					photoTextField.enabled = true;
					browseButton.enabled = true;
					if(isPhotoLoaded) {
						sendBtn.enabled = true;
					}
				} else {
					photoTextField.enabled = false;
					browseButton.enabled = false;
					sendBtn.enabled = true;
				}
				
				if(appKey.selected) {
					appKeyTextField.enabled = true;
					oauthKeyTextField.enabled = false;
					oauthSecretTextField.enabled = false;
				}
				if(oauth.selected) {
					appKeyTextField.enabled = false;
					oauthKeyTextField.enabled = true;
					oauthSecretTextField.enabled = true;
				}
			}
			
			protected function showLoading():void {
				if(waitingpopup == null) {
					waitingpopup = new TitleWindow();
					waitingpopup.title = "Please Wait";
					var pb:ProgressBar = new ProgressBar();
					pb.indeterminate = true;
					pb.label = "Loading...";
					waitingpopup.addChild(pb);    
				}
				PopUpManager.addPopUp(waitingpopup, this, true);
				PopUpManager.centerPopUp(waitingpopup);
			}
			
			protected function hideLoading():void {
				PopUpManager.removePopUp(waitingpopup);
			}
			
			protected function appKey_clickHandler(event:MouseEvent):void
			{
				updateForm();				
			}
			
			protected function oauth_clickHandler(event:MouseEvent):void
			{
				updateForm();
			}
			
			protected function button2_clickHandler(event:MouseEvent):void
			{
				var sdk:Cocoafish = null;
				if(appKey.selected) {
					sdk = new Cocoafish(appKeyTextField.text);
				}
				if(oauth.selected) {
					sdk = new Cocoafish(oauthKeyTextField.text, oauthSecretTextField.text);
				}
				var param:Object = new Object();
				param.per_page = "20";
				sdk.sendRequest("places/search.json", URLRequestMethod.GET, param, false, function(data:Object):void {
					hideLoading();
					var result:String = JSON.encode(data);
					trace(result);
					Alert.show(result);
				});
				showLoading();
			}
			
			protected function button3_clickHandler(event:MouseEvent):void
			{
				var sdk:Cocoafish = null;
				if(appKey.selected) {
					sdk = new Cocoafish(appKeyTextField.text);
				}
				if(oauth.selected) {
					sdk = new Cocoafish(oauthKeyTextField.text, oauthSecretTextField.text);
				}
				var data:Object = new Object();
				data.login = loginTextField.text;
				data.password = loginPasswdTextField.text;
				
				sdk.sendRequest("users/login.json", URLRequestMethod.POST, data, false, function(data:Object):void {
					hideLoading();
					var result:String = JSON.encode(data);
					trace(result);
					Alert.show(result);
				});
				showLoading();
			}
			
			protected function button4_clickHandler(event:MouseEvent):void
			{
				var sdk:Cocoafish = null;
				if(appKey.selected) {
					sdk = new Cocoafish(appKeyTextField.text);
				}
				if(oauth.selected) {
					sdk = new Cocoafish(oauthKeyTextField.text, oauthSecretTextField.text);
				}
				
				sdk.sendRequest("users/logout.json", URLRequestMethod.GET, null, false, function(data:Object):void {
					hideLoading();
					var result:String = JSON.encode(data);
					trace(result);
					Alert.show(result);
				});
				showLoading();
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<s:RadioButtonGroup id="radiogroup1"/>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<mx:TabNavigator x="11" y="126" width="726" height="459">
		<s:NavigatorContent width="100%" height="100%" label="Users">
			<s:Panel x="10" y="10" width="394" height="255"
					 skinClass="spark.skins.spark.PanelSkin" title="Create User">
				<s:Label x="10" y="10" text="First Name:"/>
				<s:Label x="10" y="10" text="First Name:"/>
				<s:TextInput id="firstNameTextField" x="124" y="4" width="258" text="Bill"/>
				<s:TextInput id="lastNameTextField" x="124" y="34" width="258" text="Wang"/>
				<s:TextInput id="emailTextField" x="124" y="64" width="258" text="bill@cocoafish.com"/>
				<s:TextInput id="passwdTextField" x="124" y="94" width="258" displayAsPassword="true"/>
				<s:TextInput id="passwdConfirmTextField" x="124" y="124" width="258" displayAsPassword="true"/>
				<s:Label x="10" y="71" height="15" text="Email:"/>
				<s:Label x="10" y="40" text="Last Name:"/>
				<s:Label x="10" y="98" height="18" text="Password:"/>
				<s:Label x="10" y="129" text="Password Confirm:"/>
				<s:CheckBox id="photoRadio" x="10" y="154" label="Photo"
							click="photoRadio_clickHandler(event)"/>
				<s:TextInput id="photoTextField" x="124" y="154" width="180" editable="false"
							 enabled="false"/>
				<s:Button id="browseButton" x="312" y="155" label="Browse..."
						  click="selectPhoto(event)" enabled="false"/>
				<s:Button id="sendBtn" x="279" y="189" width="103" label="Create User"
						  click="button1_clickHandler(event)" enabled="true"/>
			</s:Panel>
			<s:Panel x="10" y="284" width="393" height="124" title="Login User">
				<s:Button x="311" y="60" label="Login" click="button3_clickHandler(event)"/>
				<s:Label x="10" y="10" text="Login:"/>
				<s:Label x="10" y="40" text="Password:"/>
				<s:TextInput id="loginTextField" x="94" y="4" width="287" text="bill@cocoafish.com"/>
				<s:TextInput id="loginPasswdTextField" x="94" y="34" width="287"
							 displayAsPassword="true" text="111111"/>
			</s:Panel>
			<s:Panel x="411" y="284" width="303" height="124">
				<s:Button x="18" y="10" width="89" height="26" label="Logout"
						  click="button4_clickHandler(event)"/>
				<s:Button x="18" y="44" width="89" height="24" label="Delete"/>
			</s:Panel>
		</s:NavigatorContent>
		<s:NavigatorContent width="100%" height="100%" label="Places">
			<s:Button x="10" y="10" label="Search Places" click="button2_clickHandler(event)"/>
		</s:NavigatorContent>
		<s:NavigatorContent width="100%" height="100%" label="Photo Collections">
			<mx:VBox id="box" x="10" width="704" height="310" maxWidth="600" maxHeight="300"
					 horizontalAlign="center" verticalGap="0">
				<containers:CoverFlowContainer id="coverflow" width="100%" height="100%" 
										   horizontalGap="40" borderStyle="inset" backgroundColor="0x000000"
										   segments="6" reflectionEnabled="true" creationComplete="initCollectionCoverFlow()">
					
				</containers:CoverFlowContainer>
				<mx:HScrollBar id="scrollbar" width="100%" pageSize="1" maxScrollPosition="{coverflow.numChildren - 1}"
						   scrollPosition="{coverflow.selectedIndex}" 
						   scroll="coverflow.selectedIndex = Math.round(scrollbar.scrollPosition)" />
			</mx:VBox>
			<s:Panel x="14" y="316" width="311" height="99" title="Create Collection">
				<s:Label x="10" y="10" height="22" fontWeight="bold" text="Name:"
						 verticalAlign="middle"/>
				<s:TextInput id="collectionName" x="50" y="10" width="237"
							 prompt="&lt;Collection name&gt;"/>
				<s:Button x="217" y="40" label="Create" click="createCollection()"/>
			</s:Panel>
		</s:NavigatorContent>
		<s:NavigatorContent width="100%" height="100%" label="Key-values">
			<s:DataGrid id="keyvalueGrid" x="9" y="237" width="704" height="179"
						creationComplete="refreshDataGrid()" dataProvider="{keyvalueGridData}">
				<s:columns>
					<s:ArrayList>
						<s:GridColumn width="200" dataField="keyField" headerText="Key"></s:GridColumn>
						<s:GridColumn width="400" dataField="valueField" headerText="Value"></s:GridColumn>
						<s:GridColumn dataField="opr" headerText=" "
									  itemRenderer="com.cocoafish.api.test.components.keyvalues"
									  resizable="false" sortable="false"></s:GridColumn>
					</s:ArrayList>
				</s:columns>
			</s:DataGrid>
			<s:Panel x="10" y="10" width="705" height="206" title="Create Key-value">
				<s:Label x="10" y="10" height="22" fontWeight="bold" text="Key:"
						 verticalAlign="middle"/>
				<s:TextInput id="keyText" x="53" y="10" width="640"/>
				<s:Label x="10" y="40" fontWeight="bold" text="Value:"/>
				<s:TextArea id="valueText" x="53" y="40" width="641" height="94"/>
				<s:Button x="623" y="142" label="Add" click="addKeyValuePair()"/>
			</s:Panel>
		</s:NavigatorContent>
	</mx:TabNavigator>
	<s:Label x="10" y="10" fontSize="20" fontWeight="bold" text="Cocoafish Actionscript SDK Tests"/>
	<s:VGroup x="10" y="37" width="84" height="81">
		<s:RadioButton id="appKey" label="App. Key" click="appKey_clickHandler(event)"
					   groupName="radiogroup1" selected="false"/>
		<s:RadioButton id="oauth" label="OAuth" click="oauth_clickHandler(event)" enabled="true"
					   groupName="radiogroup1" selected="true"/>
	</s:VGroup>
	<s:TextInput id="appKeyTextField" x="99" y="37" width="514"
				 text="fNEQf2q7T4pQIuJTT4aRvoaHFhuiVP77"/>
	<s:TextInput id="oauthKeyTextField" x="145" y="62" width="468" enabled="false"
				 text="2dnrrXXeypfyLDHFbOw550BTpHEx8sED"/>
	<s:TextInput id="oauthSecretTextField" x="146" y="87" width="467" enabled="false"
				 text="SnUpTiNiqQHujRY98K5rfTuo6CpsMjFC"/>
	<s:Label x="99" y="93" text="Secret:"/>
	<s:Label x="99" y="67" text="Key:"/>
</s:Application>
